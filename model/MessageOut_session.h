/**
 * Textmagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * MessageOut_session.h
 *
 * 
 */

#ifndef COM_TEXTMAGIC_CLIENT_MODEL_MessageOut_session_H_
#define COM_TEXTMAGIC_CLIENT_MODEL_MessageOut_session_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace com {
namespace textmagic {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  MessageOut_session
    : public ModelBase
{
public:
    MessageOut_session();
    virtual ~MessageOut_session();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// MessageOut_session members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getStartTime() const;
    bool startTimeIsSet() const;
    void unsetStartTime();
    void setStartTime(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getText() const;
    bool textIsSet() const;
    void unsetText();
    void setText(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    float getPrice() const;
    bool priceIsSet() const;
    void unsetPrice();
    void setPrice(float value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getNumbersCount() const;
    bool numbersCountIsSet() const;
    void unsetNumbersCount();
    void setNumbersCount(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDestination() const;
    bool destinationIsSet() const;
    void unsetDestination();
    void setDestination(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSource() const;
    bool sourceIsSet() const;
    void unsetSource();
    void setSource(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getReferenceId() const;
    bool referenceIdIsSet() const;
    void unsetReferenceId();
    void setReferenceId(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getInitiatorId() const;
    bool initiatorIdIsSet() const;
    void unsetInitiatorId();
    void setInitiatorId(int32_t value);

protected:
    int32_t m_Id;
    bool m_IdIsSet;
    utility::string_t m_StartTime;
    bool m_StartTimeIsSet;
    utility::string_t m_Text;
    bool m_TextIsSet;
    float m_Price;
    bool m_PriceIsSet;
    int32_t m_NumbersCount;
    bool m_NumbersCountIsSet;
    utility::string_t m_Destination;
    bool m_DestinationIsSet;
    utility::string_t m_Source;
    bool m_SourceIsSet;
    utility::string_t m_ReferenceId;
    bool m_ReferenceIdIsSet;
    int32_t m_InitiatorId;
    bool m_InitiatorIdIsSet;
};

}
}
}
}

#endif /* COM_TEXTMAGIC_CLIENT_MODEL_MessageOut_session_H_ */
