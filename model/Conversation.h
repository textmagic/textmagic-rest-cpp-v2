/**
 * Textmagic API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator 2.4.8.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * Conversation.h
 *
 * 
 */

#ifndef COM_TEXTMAGIC_CLIENT_MODEL_Conversation_H_
#define COM_TEXTMAGIC_CLIENT_MODEL_Conversation_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "File.h"
#include <vector>
#include "MessagePayload.h"

namespace com {
namespace textmagic {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  Conversation
    : public ModelBase
{
public:
    Conversation();
    virtual ~Conversation();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Conversation members

    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
        void setId(int32_t value);
    /// <summary>
    /// Message type: inbound or outbound. 
    /// </summary>
    utility::string_t getDirection() const;
        void setDirection(utility::string_t value);
    /// <summary>
    /// Sender phone number.
    /// </summary>
    utility::string_t getSender() const;
        void setSender(utility::string_t value);
    /// <summary>
    /// Time when  the message arrived at Textmagic.
    /// </summary>
    utility::datetime getMessageTime() const;
        void setMessageTime(utility::datetime value);
    /// <summary>
    /// Message text.
    /// </summary>
    utility::string_t getText() const;
        void setText(utility::string_t value);
    /// <summary>
    /// Receiver&#39;s phone number.
    /// </summary>
    utility::string_t getReceiver() const;
        void setReceiver(utility::string_t value);
    /// <summary>
    /// Message status (for chats outbound only). See [message delivery statuses](https://docs.textmagic.com/#section/Delivery-status-codes) for details.
    /// </summary>
    utility::string_t getStatus() const;
        void setStatus(utility::string_t value);
    /// <summary>
    /// Contact first name.
    /// </summary>
    utility::string_t getFirstName() const;
        void setFirstName(utility::string_t value);
    /// <summary>
    /// Contact last name.
    /// </summary>
    utility::string_t getLastName() const;
        void setLastName(utility::string_t value);
    /// <summary>
    /// Session ID of a message. See [message sessions](https://docs.textmagic.com/#tag/Outbound-Message-Sessions) for details.
    /// </summary>
    int32_t getSessionId() const;
        void setSessionId(int32_t value);
    /// <summary>
    /// Initiator ID of a message. See [message sessions](https://docs.textmagic.com/#tag/Outbound-Message-Sessions) for details.
    /// </summary>
    int32_t getInitiatorId() const;
    bool initiatorIdIsSet() const;
    void unsetInitiatorId();
    void setInitiatorId(int32_t value);
    /// <summary>
    /// Message file id.
    /// </summary>
    int32_t getMessageFileId() const;
    bool messageFileIdIsSet() const;
    void unsetMessageFileId();
    void setMessageFileId(int32_t value);
    /// <summary>
    /// Message type.
    /// </summary>
    utility::string_t getType() const;
    bool typeIsSet() const;
    void unsetType();
    void setType(utility::string_t value);
    /// <summary>
    /// Chat type.
    /// </summary>
    utility::string_t getChatType() const;
    bool chatTypeIsSet() const;
    void unsetChatType();
    void setChatType(utility::string_t value);
    /// <summary>
    /// Chat id.
    /// </summary>
    int32_t getChatId() const;
    bool chatIdIsSet() const;
    void unsetChatId();
    void setChatId(int32_t value);
    /// <summary>
    /// 
    /// </summary>
    bool isIsEdited() const;
    bool isEditedIsSet() const;
    void unsetIsEdited();
    void setIsEdited(bool value);
    /// <summary>
    /// Error code.
    /// </summary>
    utility::string_t getErrorCode() const;
    bool errorCodeIsSet() const;
    void unsetErrorCode();
    void setErrorCode(utility::string_t value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<File>>& getFiles();
    bool filesIsSet() const;
    void unsetFiles();
    void setFiles(std::vector<std::shared_ptr<File>> value);
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<MessagePayload> getPayload() const;
    bool payloadIsSet() const;
    void unsetPayload();
    void setPayload(std::shared_ptr<MessagePayload> value);
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAvatar() const;
    bool avatarIsSet() const;
    void unsetAvatar();
    void setAvatar(utility::string_t value);

protected:
    int32_t m_Id;
        utility::string_t m_Direction;
        utility::string_t m_Sender;
        utility::datetime m_MessageTime;
        utility::string_t m_Text;
        utility::string_t m_Receiver;
        utility::string_t m_Status;
        utility::string_t m_FirstName;
        utility::string_t m_LastName;
        int32_t m_SessionId;
        int32_t m_InitiatorId;
    bool m_InitiatorIdIsSet;
    int32_t m_MessageFileId;
    bool m_MessageFileIdIsSet;
    utility::string_t m_Type;
    bool m_TypeIsSet;
    utility::string_t m_ChatType;
    bool m_ChatTypeIsSet;
    int32_t m_ChatId;
    bool m_ChatIdIsSet;
    bool m_IsEdited;
    bool m_IsEditedIsSet;
    utility::string_t m_ErrorCode;
    bool m_ErrorCodeIsSet;
    std::vector<std::shared_ptr<File>> m_Files;
    bool m_FilesIsSet;
    std::shared_ptr<MessagePayload> m_Payload;
    bool m_PayloadIsSet;
    utility::string_t m_Avatar;
    bool m_AvatarIsSet;
};

}
}
}
}

#endif /* COM_TEXTMAGIC_CLIENT_MODEL_Conversation_H_ */
